# Build config for Jenkins bddstack-node functional testing
#
# Process this file, creating or replacing imagestreams and builds
# $ oc process -f openshift/bddstack-node.yaml | oc [create|replace] -n <PROJECT> -f -
#
apiVersion: v1
kind: Template
metadata:
  name: bddstack-node
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: bddstack-node
      labels:
        build: bddstack-node
      annotations:
        openshift.io/generated-by: OpenShiftNewBuild
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewBuild
      labels:
        build: bddstack-node
      name: bddstack-node
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: bddstack-node:latest:1.0
      source:
        dockerfile: |
          # https://github.com/BCDevOps/bddstack-node
          FROM registry.access.redhat.com/openshift3/jenkins-slave-base-rhel7

          ARG NODE_VERSION=v12.4.0

          EXPOSE 8080

          ENV PATH=$HOME/.local/bin/:$PATH \
              LC_ALL=en_US.UTF-8 \
              LANG=en_US.UTF-8

          ENV SUMMARY="Jenkins slave with chrome installed for use with functional/BDD tests that use bddstack-node." \
              DESCRIPTION="Jenkins pipeline slave with chrome for testing application with headless browser. (aka 'bddstack-node')"

          LABEL summary="$SUMMARY" \
                description="$DESCRIPTION" \
                io.k8s.description="$DESCRIPTION" \
                io.k8s.display-name="Jenkins-Pipeline-bddstack-node" \
                io.openshift.expose-services="8080:http" \
                io.openshift.tags="builder,jenkins-jnlp-chrome,jenkins-jnlp" \
                release="1"

          # NOTES:
          # We need to call 2 (!) yum commands before being able to enable repositories properly
          # This is a workaround for https://bugzilla.redhat.com/show_bug.cgi?id=1479388
          # Chrome install info: https://access.redhat.com/discussions/917293
          RUN yum repolist > /dev/null && \
              yum install -y yum-utils && \
              yum-config-manager --disable \* &> /dev/null && \
              yum-config-manager --enable rhel-server-rhscl-7-rpms && \
              yum-config-manager --enable rhel-7-server-rpms && \
              yum-config-manager --enable rhel-7-server-optional-rpms && \
              yum-config-manager --enable rhel-7-server-fastrack-rpms && \
              UNINSTALL_PKGS="java-1.8.0-openjdk-headless.i686" &&\
              INSTALL_PKGS="redhat-lsb libXScrnSaver gdk-pixbuf2 xorg-x11-server-Xvfb wget" && \
              yum remove -y $UNINSTALL_PKGS &&\
              yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \
              rpm -V $INSTALL_PKGS && \
              yum clean all -y && \
              wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm && \
              yum -y localinstall google-chrome-stable_current_x86_64.rpm && \
              rm google-chrome-stable_current_x86_64.rpm && \
              mkdir -p /home/jenkins/.pki && \
              chmod 777 /home/jenkins/.pki && \
              yum info google-chrome-stable \
              mkdir /opt && \
              pushd /opt && \
              curl -sL https://nodejs.org/dist/${NODE_VERSION}/node-${NODE_VERSION}-linux-x64.tar.xz | tar -Jx && \
              rm -f node-${NODE_VERSION}-linux-x64.tar.xz && \
              # Obtain the installed Chrome version so that bddstack-node can load the correct driver by querying the chromeversion and chromedriver files    
              google-chrome --version | grep -o -m 1 -E "[0-9]{2,3}[^ ^a-z^A-Z^0-9^\.]*" | sed -n 1p >  /opt/app-root/chromeversion && \
              wget https://chromedriver.storage.googleapis.com/LATEST_RELEASE_`cat /opt/app-root/chromeversion` -O  /opt/app-root/chromedriver 

          # Update environment variables
          ENV NODE_HOME=/opt/node-${NODE_VERSION}-linux-x64 \
          PATH=$PATH:/opt/node-${NODE_VERSION}-linux-x64/bin

          # Update the version of `npm` that came with the packages above
          # and install a few additional tools.
          RUN npm i -g npm@latest yarn@latest nsp@latest nodemon@latest  && \
              rm -rf ~/.npm && \
              node -v && \
              npm -v

          USER 1001

        type: Dockerfile
      strategy:
        dockerStrategy:
          env:
            - name: OPENSHIFT_JENKINS_JVM_ARCH
              value: x86_64
        type: Docker
      triggers:
        - type: ConfigChange
        - imageChange: {}
          type: ImageChange
